name: üö• Build Godot C#
on: push

env:
  GODOT_ANDROID_KEYSTORE_RELEASE_PATH: ${{ github.workspace }}/release.keystore 
  GODOT_ANDROID_KEYSTORE_RELEASE_USER: Unknown
  GODOT_ANDROID_KEYSTORE_RELEASE_PASSWORD: 123456

jobs:
  build:
    name: üëÄ Evaluate on 
    runs-on: ${{ matrix.platform.system }}
    strategy:
      # Don't cancel other OS runners if one fails.
      fail-fast: false
      matrix:
        platform: 
          - name: Windows
            system: "ubuntu-latest"
            extension: ".exe"
          - name: macOS
            system: "macos-latest"
            extension: ".app"
          - name: Linux
            system: "ubuntu-latest"
            extension: ".x86_64"
          # - name: Web
          #   extension: ".html"
          - name: Android
            system: "ubuntu-latest"
            extension: ".apk"
          # - name: iOS
          #   system: "macos-latest"
          #   extension: ".ipa"
    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: true
      DOTNET_NOLOGO: true
    defaults:
      run:
        # Use bash shells on all platforms.
        shell: bash
    steps:
      - name: üßæ Checkout
        uses: actions/checkout@v4

      - name: üíΩ Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.x

      - name: üèóÔ∏è Restore Packages
        run: dotnet restore

      - name: ü§ñ Setup Godot
        uses: chickensoft-games/setup-godot@v1
        with:
          # Version must include major, minor, and patch, and be >= 4.0.0
          # Pre-release label is optional.
          version: 4.3.0 # also valid: 4.0.0.rc1 or 4.0.0, etc
          # Use .NET-enabled version of Godot (the default is also true).
          use-dotnet: true
          # Include the Godot Export Templtes (the default is false).
          include-templates: true

      - name: üî¨ Verify Setup
        run: |
          dotnet --version
          godot --version

      # Setup android
      - name: Set up JDK 17
        if: matrix.platform.name == 'Android'
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Android SDK
        if: matrix.platform.name == 'Android'
        uses: android-actions/setup-android@v3

      - name: Generate Keystore
        if: matrix.platform.name == 'Android'
        run: |
          if [ ! -f $GODOT_ANDROID_KEYSTORE_RELEASE_PATH ]; then
            keytool -genkey -v -keystore release.keystore -alias $GODOT_ANDROID_KEYSTORE_RELEASE_USER -keyalg RSA -keysize 2048 -validity 10000 \
              -storepass $GODOT_ANDROID_KEYSTORE_RELEASE_PASSWORD -keypass $GODOT_ANDROID_KEYSTORE_RELEASE_PASSWORD -dname "CN=Unknown, OU=Unknown, O=Unknown, L=Unknown, S=Unknown, C=Unknown"
          fi
          env

      # Build the project for each platform
      - name: üõ†Ô∏è Build Godot Solutions
        run: godot --headless --build-solutions --quit || exit 0

      - name: üõ†Ô∏è Build C# Projects
        run: dotnet build
        
      - name: üöÄ Export Project
        run: |
          mkdir -v -p build
          godot --headless --verbose --export-release "${{ matrix.platform.name }}" ./build/${{ github.event.repository.name }}${{ matrix.platform.extension }}

      # Compress the build files and upload them as an artifact
      - name: üóúÔ∏è Compress
        run: |
          cd build
          sudo zip -r ./${{ matrix.platform.name }}.zip *

      - name: üìÇ Display structure of build files
        run: ls -R ./build

      - name: üì¶ Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform.name }}
          path: ./build/${{ matrix.platform.name }}.zip

  release:
    # if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write
    steps:
      # Checkout
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: false

      # Download 
      - uses: actions/download-artifact@v4
        with:
          path: artifacts
      - name: Display structure of build files
        run: ls -R artifacts/**/*.*

      # Get latest tag
      - name: 'Get Previous tag'
        id: previoustag
        uses: WyriHaximus/github-action-get-previous-tag@v1.4.0
        # with:
        #   fallback: 1.0.0 
      
      # Release
      - name: Release
        uses: softprops/action-gh-release@v2
        # if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            artifacts/**/*.zip
            artifacts/**/*.apk
          tag_name: ${{ steps.previoustag.outputs.tag }}
