name: 🚥 Build Godot C#
on: push

jobs:
  tests:
    name: 👀 Evaluate on 
    runs-on: ubuntu-latest
    strategy:
      # Don't cancel other OS runners if one fails.
      fail-fast: false
      matrix:
        platform: 
          - name: Windows
            extension: ".exe"
          - name: Linux
            extension: ".x86_64"
          # - name: macOS
          #   extension: ".app"
          # - name: Web
          #   extension: ".html"
    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: true
      DOTNET_NOLOGO: true
    defaults:
      run:
        # Use bash shells on all platforms.
        shell: bash
    steps:
      - name: 🧾 Checkout
        uses: actions/checkout@v4

      - name: 💽 Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.x

      - name: 🏗️ Restore Packages
        run: dotnet restore

      - name: 🤖 Setup Godot
        uses: chickensoft-games/setup-godot@v1
        with:
          # Version must include major, minor, and patch, and be >= 4.0.0
          # Pre-release label is optional.
          version: 4.3.0 # also valid: 4.0.0.rc1 or 4.0.0, etc
          # Use .NET-enabled version of Godot (the default is also true).
          use-dotnet: true
          # Include the Godot Export Templtes (the default is false).
          include-templates: true

      - name: 🔬 Verify Setup
        run: |
          dotnet --version
          godot --version

      - name: 🛠️ Build Godot Solutions
        run: godot --headless --build-solutions --quit || exit 0

      - name: 🛠️ Build C# Projects
        run: dotnet build
        
      # Export the project for each platform
      - name: 🚀 Export Project
        run: |
          mkdir -v -p build
          godot --headless --verbose --export-release "${{ matrix.platform.name }}" ./build/${{ github.event.repository.name }}${{ matrix.platform.extension }}

      - name: 📂 Display structure of build files
        run: ls -R ./build

      # Compress the build files for each platform
      - name: 🗜️ Compress
        run: |
          cd build
          sudo zip -r ./${{ matrix.platform.name }}.zip *
          cd ..

      - name: 📦 Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform.name }}
          path: ./${{ matrix.platform.name }}.zip

      # Get latest tag
      - name: 🏷️ Get latest tag
        id: previoustag
        uses: WyriHaximus/github-action-get-previous-tag@v1.4.0
        # with:
        #   fallback: 1.0.0 

      # Release
      - name: 🚢 Release
        uses: softprops/action-gh-release@v2
        # if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            build/*.zip
            build/*.apk
          tag_name: ${{ steps.previoustag.outputs.tag }}